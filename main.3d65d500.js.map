{"version":3,"sources":["scripts/main.js"],"names":["employees","document","querySelectorAll","getNumbersFromString","string","split","filter","value","Number","isInteger","join","sortBySalary","previousEmployee","currentEmployee","previousEmployeeSalary","dataset","salary","currentEmployeeSalary","sortList","list","querySelector","append","sort","getObjectFromAttributes","employee","name","innerText","position","age","getEmployees","map"],"mappings":";AAAA,aAoCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlCA,IAAMA,EAAgBC,EAAAA,SAASC,iBAAiB,OAE1CC,EAAuB,SAACC,GACrBA,OAAAA,EAAOC,MAAM,IAAIC,OAAO,SAAAC,GAC7BC,OAAAA,OAAOC,WAAWF,KAAQG,KAAK,KAG7BC,EAAe,SAACC,EAAkBC,GAChCC,IAAAA,EAAyBX,EAAqBS,EACjDG,QAAQC,QAIJC,OAHuBd,EAAqBU,EAChDE,QAAQC,QAEoBF,GAGjC,SAASI,EAASC,GAAM,IAAA,GACtBlB,EAAAA,SAASmB,cAAc,OAAMC,OAAUF,MAAAA,EAAAA,EAAAA,EAAKG,KAAKX,KAGnD,IAAMY,EAA0B,SAAAC,GACvB,MAAA,CACLC,KAAMD,EAASE,UACfC,SAAUH,EAAST,QAAQY,SAC3BX,OAAQQ,EAAST,QAAQC,OACzBY,IAAKJ,EAAST,QAAQa,MAI1B,SAASC,EAAaV,GACbA,OAAAA,EAAKW,IAAIP,GAGlBL,EAASlB,GACT6B,EAAa7B","file":"main.3d65d500.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employees = [...document.querySelectorAll('li')];\n\nconst getNumbersFromString = (string) => {\n  return string.split('').filter(value =>\n    Number.isInteger(+value)).join('');\n};\n\nconst sortBySalary = (previousEmployee, currentEmployee) => {\n  const previousEmployeeSalary = getNumbersFromString(previousEmployee\n    .dataset.salary);\n  const currentEmployeeSalary = getNumbersFromString(currentEmployee\n    .dataset.salary);\n\n  return currentEmployeeSalary - previousEmployeeSalary;\n};\n\nfunction sortList(list) {\n  document.querySelector('ul').append(...list.sort(sortBySalary));\n}\n\nconst getObjectFromAttributes = employee => {\n  return {\n    name: employee.innerText,\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n    age: employee.dataset.age,\n  };\n};\n\nfunction getEmployees(list) {\n  return list.map(getObjectFromAttributes);\n}\n\nsortList(employees);\ngetEmployees(employees);\n"]}